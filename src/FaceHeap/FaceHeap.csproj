<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <StaticAnalysisCodeType>General</StaticAnalysisCodeType>
        <ApplicationInsightsResourceId>/subscriptions/92dba6c6-2cf8-46ad-9d75-8674f0f66b9a/resourceGroups/faceheap/providers/microsoft.insights/components/FaceHeap</ApplicationInsightsResourceId>
        <UserSecretsId>9d832f4a-1db1-49d9-a1a6-cd3ba0bdbf0c</UserSecretsId>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="FastEndpoints" Version="5.32.0" />
        <PackageReference Include="FastEndpoints.Generator" Version="5.32.0">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>

        <PackageReference Include="FastEndpoints.Swagger" Version="5.32.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="9.0.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.0">
            <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.22.0" />

          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="9.0.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="9.0.0" />
        <PackageReference Include="Vogen" Version="5.0.6" />
        <PackageReference Update="CSharpier.MsBuild" Version="0.30.2">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <!--
    1. Install npm packages
    "Inputs" and "Outputs" are used for incremental builds. If all output items are up-to-date, MSBuild skips the target.
    The first time the task is executed. Then, it only runs when you change the package.json file.
    Documentation: https://learn.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?WT.mc_id=DT-MVP-5003978
 -->
    <Target Name="NpmInstall" Inputs="package.json" Outputs="node_modules/.install-stamp">
        <!--
            Use npm install or npm ci depending on RestorePackagesWithLockFile value.
            Uncomment the following lines if you want to use this feature:
    
            <PropertyGroup>
              <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
            </PropertyGroup>
         -->
        <Exec Command="pnpm install" />

        <!-- Write the stamp file, so incremental builds work -->
        <Touch Files="node_modules/.install-stamp" AlwaysCreate="true" />
    </Target>

    <!--
        2. Run npm run build before building the .NET project.
        MSBuild runs NpmInstall before this task because of the DependsOnTargets attribute.
     -->
    <Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
        <Exec Command="pnpm run minify" />
    </Target>

    <ItemGroup>
      <Folder Include="Common\EfCore\Migrations\" />
      <Folder Include="wwwroot\img\" />
    </ItemGroup>

    <ItemGroup>
      <Content Update="wwwroot\index.min.html">
        <DependentUpon>index.html</DependentUpon>
      </Content>
    </ItemGroup>

</Project>
